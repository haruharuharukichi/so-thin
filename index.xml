<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://haruharuharukichi.github.io/so-thin/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Feb 2019 16:10:45 +0900</lastBuildDate>
    
	<atom:link href="https://haruharuharukichi.github.io/so-thin/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Material</title>
      <link>https://haruharuharukichi.github.io/so-thin/material/</link>
      <pubDate>Sun, 24 Feb 2019 16:10:45 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/material/</guid>
      <description>素材の集め方・おすすめサイト 色 お薦めサイト  ColorPick Eyedropper  困ったらまずコレ。気に入ったサイトで起動すれば、色コードを簡単に取得できる。TTP（徹底的にパクる）する際に便利  パレットン  色相を考えて合う色を計算してくれる優れもの。暗明のバリエーションもあるので、ぶっちゃけ全部これ使えばいいんじゃね？  palettable  色をどんどん提案してくれるので、サブ配色を決める際に便利  COLOR TOOL  マテリアルデザインの定義に従った配色を提案してくれる  カラーコード変換ツール  何かと便利な変換ツール。   お薦め色の決め方  ColorPick Eyedropperを使って参考にしたサイトのメインカラーをコピー イメージに合うように、パレットンで色をちょっとずらす メインカラーをものすごく明るくしたのと、ものすごく暗くしたのをそれぞれベースカラー、フォントカラーとして採用 イメージに合い、メインカラーと喧嘩しないサブカラーとアクセントカラーをパレットンで探す（角度と明暗を調整しつつ探す） 実装してみて合わなければ修正  実装には、以下のようにstyle.cssのトップにCSS変数を宣言し、使用か所ではそれを呼び出すと良い。
:root{ --base-color:rgb(247,247,247);/*#f7f7f7*/ --base-transparent:rgba(247,247,247,.4); --font-color:rgb(35, 31, 32);/*#231f20*/ --main-color:rgb(0, 140, 9);/*#008C09*/ --accent-color:rgb(226, 174, 5);/*#E2AE05*/ } /*使用か所*/ .main_title{ color:var(--base-color); background-color:var(--main-color); }  ※CSS変数は動かないブラウザもあるので、GitHub Pagesへの実装の際は全て通常の色指定に戻す事
/*GitHub Pagesアップの際はこれはダメ*/ .main_title{ color:var(--base-color); background-color:var(--main-color); border:1px solid var(--base-transparent); } /*これに治す*/ .main_title{ color:#f7f7f7; background-color:#008C09; border:1px solid rgba(247,247,247,.</description>
    </item>
    
    <item>
      <title>Table</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/table/</link>
      <pubDate>Sun, 17 Feb 2019 18:47:18 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/table/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Navigation</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/navigation/</link>
      <pubDate>Sun, 17 Feb 2019 18:47:06 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/navigation/</guid>
      <description>Navigation PHPベーシックコード + header.php
&amp;lt;nav role=&amp;quot;navigation&amp;quot; id=&amp;quot;navbar&amp;quot; class=&amp;quot;grid container navbar_wrapper&amp;quot;&amp;gt; &amp;lt;?php if ( function_exists( &#39;the_custom_logo&#39; ) ) { $custom_logo_id = get_theme_mod( &#39;custom_logo&#39; ); $custom_logo_url = wp_get_attachment_image_url( $custom_logo_id , &#39;full&#39; ); echo &#39;&amp;lt;a class=&amp;quot;flex navbar_brand&amp;quot; href=&amp;quot;&#39; . esc_url( home_url() ) . &#39;&amp;quot; rel=&amp;quot;home&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;navbar_logo&amp;quot; style=&amp;quot;background-image:url(&#39; . esc_url( $custom_logo_url ) . &#39;);&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&#39;; } ?&amp;gt; &amp;lt;button class=&amp;quot;navbar_toggler&amp;quot; id=&amp;quot;navbarToggler&amp;quot; type=&amp;quot;button&amp;quot;&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;?php wp_nav_menu( array( &#39;theme_location&#39;=&amp;gt;&#39;Navigation&#39;, &#39;menu_class&#39; =&amp;gt;&#39;navbar_list&#39;, &#39;container&#39; =&amp;gt;false, &#39;items_wrap&#39; =&amp;gt;&#39;&amp;lt;ul class=&amp;quot;%2$s&amp;quot;&amp;gt;%3$s&amp;lt;/ul&amp;gt;&#39;)); ?</description>
    </item>
    
    <item>
      <title>Link</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/link/</link>
      <pubDate>Sun, 17 Feb 2019 18:47:00 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/link/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Header</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/header/</link>
      <pubDate>Sun, 17 Feb 2019 18:46:52 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/header/</guid>
      <description>Header PHPベーシックコード + header.php
&amp;lt;header role=&amp;quot;banner&amp;quot; class=&amp;quot;flex header_wrapper&amp;quot; style=&amp;quot;background-image:url(&amp;lt;?php header_image(); ?&amp;gt;);&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;header_content&amp;quot;&amp;gt; &amp;lt;h1 class=&amp;quot;header_title&amp;quot;&amp;gt; &amp;lt;?php if(is_home()){ bloginfo( &#39;name&#39; ); ?&amp;gt;&amp;lt;/h1&amp;gt; &amp;lt;p class=&amp;quot;header_descripiton&amp;quot;&amp;gt;&amp;lt;?php bloginfo( &#39;description&#39; ); ?&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;?php }else{ if(is_single()){ $category = get_the_category($post-&amp;gt;ID); echo $category[0]-&amp;gt;cat_name; }elseif(is_archive()){ echo &amp;quot;archive&amp;quot;; }elseif (is_search()) { echo &amp;quot;search&amp;quot;; }elseif (is_404()) { echo &amp;quot;not found&amp;quot;; }else{ the_title(); } ?&amp;gt; &amp;lt;/h1&amp;gt; &amp;lt;?php } ?&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/header&amp;gt;   + function.php
//カスタムヘッダー追加 add_theme_support( &#39;custom-header&#39; );</description>
    </item>
    
    <item>
      <title>Grid</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/grid/</link>
      <pubDate>Sun, 17 Feb 2019 18:46:46 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/grid/</guid>
      <description>Grid 2分割 See the Pen vbmmbm by haruharuharukichi (@haruharuharukichi) on CodePen.   3分割 See the Pen LqyaBz by haruharuharukichi (@haruharuharukichi) on CodePen.   4分割 See the Pen Grid-4 by haruharuharukichi (@haruharuharukichi) on CodePen.   流動型 See the Pen Grid-List by haruharuharukichi (@haruharuharukichi) on CodePen.</description>
    </item>
    
    <item>
      <title>Form</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/form/</link>
      <pubDate>Sun, 17 Feb 2019 18:46:41 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/form/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Card</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/card/</link>
      <pubDate>Sun, 17 Feb 2019 18:46:34 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/card/</guid>
      <description>Card 共通CSS +  ```css position: relative; width: 100%; background-color:var(--base-color); } .main_card.grid{ grid-gap: 0; grid-template-columns: 1fr; grid-template-rows: 40% 60%; align-items: center; } .card_title{ margin: 0; } .card_img{ display:block; width: 100%; object-fit: cover; } .card_icon{ max-width:100%; max-height:100%; padding: 1rem; object-fit:contain; } .card_header{ position:relative; width: 100%; padding: 1rem; background-color: var(--main-color); color: var(--base-color); } .main_card.grid .card_header{ height:100%; } .card_header .card_title{ width: 100%; margin: 0; } .card_body{ position:relative; width: 100%; padding: 1rem; } .card_description{ position:absolute; top:0; left:0; margin:0; } .</description>
    </item>
    
    <item>
      <title>Button</title>
      <link>https://haruharuharukichi.github.io/so-thin/components/button/</link>
      <pubDate>Sun, 17 Feb 2019 18:46:28 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/components/button/</guid>
      <description>Button 共通HTML,CSS + html
rel,_btnの前は任意で変更
&amp;lt;a href=&amp;quot;#&amp;quot; type=&amp;quot;button&amp;quot; rel=&amp;quot;&amp;quot; class=&amp;quot;_btn&amp;quot;&amp;gt;&amp;lt;span&amp;gt;more&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;   &amp;lt;p&amp;gt;css&amp;lt;/p&amp;gt;  [class*=&amp;quot;_btn&amp;quot;],[class*=&amp;quot;_btn&amp;quot;]:hover{ display:inline-block; padding:.5rem; margin:.25rem; color: var(--font-color); text-align:center; text-decoration: none; transition:.3s; } [class*=&amp;quot;_btn&amp;quot;]:hover{ }   &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;h2 class=&amp;quot;main_title&amp;quot;&amp;gt;オーソドックスタイプ&amp;lt;/h2&amp;gt; &amp;lt;div class=&amp;quot;main_code&amp;quot;&amp;gt; &amp;lt;p class=&amp;quot;codepen&amp;quot; data-height=&amp;quot;265&amp;quot; data-theme-id=&amp;quot;0&amp;quot; data-default-tab=&amp;quot;css,result&amp;quot; data-user=&amp;quot;haruharuharukichi&amp;quot; data-slug-hash=&amp;quot;KJvQRy&amp;quot; style=&amp;quot;height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid black; margin: 1em 0; padding: 1em;&amp;quot; data-pen-title=&amp;quot;Button&amp;quot;&amp;gt; &amp;lt;span&amp;gt;See the Pen &amp;lt;a href=&amp;quot;https://codepen.io/haruharuharukichi/pen/KJvQRy/&amp;quot;&amp;gt; Button&amp;lt;/a&amp;gt; by haruharuharukichi (&amp;lt;a href=&amp;quot;https://codepen.</description>
    </item>
    
    <item>
      <title>Plugin</title>
      <link>https://haruharuharukichi.github.io/so-thin/plugin/</link>
      <pubDate>Sun, 17 Feb 2019 18:33:01 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/plugin/</guid>
      <description>必須プラグイン All in one SEO Pack
WP fastest cache
EWWW Image Optimizer
BackWPUp SiteGuard WP Plugin
Contact Form 7
CF7 Smart Grid Design Extension</description>
    </item>
    
    <item>
      <title>Function</title>
      <link>https://haruharuharukichi.github.io/so-thin/function/</link>
      <pubDate>Sun, 17 Feb 2019 18:32:51 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/function/</guid>
      <description>function.php PHPベーシックコード function.phpの基礎的な記述内容です。
先ず以下を張り付けてから、必要に応じてコードを追加していきましょう
&amp;lt;?php /* *削除系・追加系・編集系の3種類 *系列を検索する際はCtrl+Fを押してから「○○系」と入力 */ /******************削除系******************/ //SEO対策 // WordPressバージョン情報の削除 remove_action(&#39;wp_head&#39;, &#39;wp_generator&#39;); // ショートリンクURLの削除 remove_action(&#39;wp_head&#39;, &#39;wp_shortlink_wp_head&#39;); // wlwmanifestの削除 remove_action(&#39;wp_head&#39;, &#39;wlwmanifest_link&#39;); // application/rsd+xmlの削除 remove_action(&#39;wp_head&#39;, &#39;rsd_link&#39;); // RSSフィードのURLの削除 remove_action(&#39;wp_head&#39;, &#39;feed_links_extra&#39;, 3); //自動成形停止 remove_filter( &#39;the_content&#39;, &#39;wpautop&#39; ); function override_mce_options( $init_array ) { $init_array[&#39;indent&#39;] = true; $init_array[&#39;wpautop&#39;] = false; return $init_array; } add_filter( &#39;tiny_mce_before_init&#39;, &#39;override_mce_options&#39; ); //ツールバー非表示 add_filter(&#39;show_admin_bar&#39;, &#39;__return_false&#39;); //Contact Form 7が読み込むCSSを削除 add_action( &#39;wp_enqueue_scripts&#39;, &#39;my_delete_plugin_styles&#39; ); function my_delete_plugin_styles() { wp_deregister_style( &#39;contact-form-7&#39; ); } //メディア挿入時のデフォルトのリンク先を「なし」に設定する function webshufu_default_noimagelink() { $webshufu_default_imagelink = get_option( &#39;image_default_link_type&#39; ); if ($webshufu_default_imagelink !</description>
    </item>
    
    <item>
      <title>Flow</title>
      <link>https://haruharuharukichi.github.io/so-thin/flow/</link>
      <pubDate>Sun, 17 Feb 2019 18:32:32 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/flow/</guid>
      <description>制作の流れ 営業請負会社担当 受注
営業代行会社が案件をとってきます。
クライアント名・大まかなボリューム・金額がこちらに伝えられ制作担当者を決めます。
ヒアリング・画像のシェア 大まかにどのようなサイトを希望しているのかを代行会社がヒアリングし、その内容と画像等がGoogleドライブにシェアされます。
ヒアリング内容は以下の通りです。
 概要 理念、思い 与えたいイメージ（クール、ロック、ポップ、ラグジュアリー等） 強み 何故サイトが欲しいのか 想定している大まかなページ構成 伝えたいメッセージ ライバルサイト 好印象のサイトデザイン（具体例も） ストーリー（何故立ち上げたのかなど）  
自社担当 チャットワーク連絡 管理者がクライアントとチャットを繋ぎます チャットワークにクライアントから連絡が来たら、クライアントに自動的に以下の連絡が送られます。
 ご申請いただきありがとうございます。
WEBサイト作成サービスsoThinです。
こちらのチャットワークアカウントでは、制作から納品までを主に担当させていただきます。
制作の流れは以下の通りとなります。
1. 軽いヒアリングと概要の確認をさせていただきます
2. サイトトップページのデザイン案を作成します（フェーズ1）
3. トップページにあわせてサイト全体のデザインを作成します（フェーズ2）
4. サーバーを用意していただき、WordPressをインストールしサイトを構築・納品します（フェーズ3）
各フェーズでは、1回につき１つのデザイン又は成果物を見ていただきます（一度に複数お見せし、その中から選んでいただくという形式はとりません）。
気に入っていただいた時点で次のフェーズに移行しますが、変更を希望する部分がある場合は変更依頼を出すことが出来ます。その場合は、該当フェーズを繰り返しとなります。
各フェーズの作業期間は1回あたり5営業日を目安としてお考え下さい。
誠に勝手ながら、フェーズの変更依頼は各3回まで、お客様からのご質問は計10回までとさせていただき、超過分は追加料金をお支払いいただきます。
以前の事例をもとに担当者の保護を目的につくられた制限ですので、何卒ご理解とご協力を宜しくお願い致します。
より良いサイトを作成出来る様尽力いたしますので、ご協力いただけますと幸いです。
後程制作担当者をこのグループに追加いたしますので、今しばらくお待ちください。
 送信後、管理者が担当者をグループに招待します。
ヒアリング（ここから担当者が行う） 詳細をヒアリングし、ページ概要を確認
事前にGoogleドライブに共有されている内容を参考に概要を把握しておく。
挨拶と同時に、方向性と追加で必要な内容を確認・質問する。
質問の際は、サイト作成の目的や誰がどんな目的で閲覧するのかを明らかにするように。
依頼者と製作者が考えている、「良いサイト」のイメージを統一出来るのが良い質問です。
以下テンプレート
【】を入れ替え、質問数は必要に応じて変化させて使用
 この度WEBサイトの制作を担当させていただくこととなりました、【名前】です。
よろしくお願いします！
早速作成に移りたいのですが、その前にいくつか軽いヒアリングをさせていただきたいと考えております。
【相手の名前】様の考えをより深く知ることで、見る人の心に残るWEBサイトを作りたいからです。
お手数おかけしますが、ご協力お願いします！
お聞きしたい項目は以下の通りです。
1. 【質問１ ex. 色について　前回のヒアリングを確認したところ、クールな美容室といったイメージを持ちました。コンセプトカラーは青が良いかと考えたのですが、如何でしょうか？】
2. 【質問２ ex.</description>
    </item>
    
    <item>
      <title>Naming</title>
      <link>https://haruharuharukichi.github.io/so-thin/naming/</link>
      <pubDate>Sun, 17 Feb 2019 17:23:51 +0900</pubDate>
      
      <guid>https://haruharuharukichi.github.io/so-thin/naming/</guid>
      <description>BEMカスタム命名規則 クラス名 メインクラス  Blockはセクション名+_wrapper(Block単体ではなく、Block_elementのように扱う) Blockは量産せず、なるべく少ないブロック数でコーディングする Block名はHTML5のタグ名をベースにした物を使う BlockとElementはスネークケースで繋ぐ Modifierは単語 Modifier単体では使わない Block名等が2単語以上からなる場合はキャメルケースで繋ぐ 組み合わせが限定される場合はセレクターでの指定を許可する(ul→li,.btn→spanなど) Elementの中のElementはどちらもBlockの直接の子要素として考える 例外として、card,post等の多用する、かつ他との差別化が必要になる要素名の場合は親Elementをブロックとして考える card等の種類の識別にはModifierを使用する 必要に応じてsectionにidを設定する Block名等が2単語以上からなる場合はキャメルケースで繋ぐ  グローバルクラス（特殊クラス）  メインクラスの補助としてグローバルクラスを導入しても良い JSにクラスを使う場合、一般的な装飾を行う場合はグローバルクラスとして扱う JSにクラスを使う場合は先頭を大文字に グローバルクラスにBEMの概念は使用しない 基本的にグローバルクラスは単語で使用する グローバルクラスの接続が必要な場合はケバブケース(ハイフン)を使う Block名等が2単語以上からなる場合はキャメルケースで繋ぐ 記述はグローバルクラス→メインクラスの順（一般的な設定→細かい設定の順）  サンプル 名前使用例 メインクラス Block
 navbar header main sidebar footer  Element
 inner content item header img body title description text  Modifier
 active select main aside footer  グローバルクラス  container Inview inline-left inline-center inline-right  HTML
&amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;block_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;block_element&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;block_element modifier&amp;quot;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;blockBlock_wrapper&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;blockBlock_element&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;blockBlock_element modifier&amp;quot;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt; &amp;lt;section id=&amp;quot;blockName&amp;quot; class=&amp;quot;container　inline-center　block_wrapper&amp;quot;&amp;gt; &amp;lt;h2 class=&amp;quot;block_title&amp;quot;&amp;gt;title&amp;lt;/h2&amp;gt; &amp;lt;p class=&amp;quot;block_element&amp;quot;&amp;gt;text&amp;lt;/p&amp;gt; &amp;lt;div class=&amp;quot;block_content&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;block_card active&amp;quot;&amp;gt; &amp;lt;h2 class=&amp;quot;card_title&amp;quot;&amp;gt;title&amp;lt;/h2&amp;gt; &amp;lt;p class=&amp;quot;card_description&amp;quot;&amp;gt;informaiton&amp;lt;/p&amp;gt; &amp;lt;p class=&amp;quot;card_text&amp;quot;&amp;gt;text&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;block_card&amp;quot;&amp;gt; &amp;lt;h2 class=&amp;quot;card_title&amp;quot;&amp;gt;title&amp;lt;/h2&amp;gt; &amp;lt;p class=&amp;quot;card_description&amp;quot;&amp;gt;informaiton&amp;lt;/p&amp;gt; &amp;lt;p class=&amp;quot;card_text&amp;quot;&amp;gt;text&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;block_card&amp;quot;&amp;gt; &amp;lt;h2 class=&amp;quot;card_title&amp;quot;&amp;gt;title&amp;lt;/h2&amp;gt; &amp;lt;p class=&amp;quot;card_description&amp;quot;&amp;gt;informaiton&amp;lt;/p&amp;gt; &amp;lt;p class=&amp;quot;card_text&amp;quot;&amp;gt;text&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/section&amp;gt;  CSS/SCSS .</description>
    </item>
    
  </channel>
</rss>